<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use AppBundle\Constants\ConstParamAttributs;
use AppBundle\Constants\Constants;

/**
 * CarpoolingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CarpoolingRepository extends AbstractRepository
{
	public function countCpForEachDepartureDate($trajet, $dateTimesInterval)
	{
		$qb = $this->createQueryBuilder('c');
		
		$qb->select("count(c.dateDepart) as nbDepart, DATE_FORMAT(c.dateDepart, '%Y-%m-%d') as date")
		   ->where(
				$qb->expr()->between('c.dateDepart', ':dateMin', ':dateMax')
		   )
		   ->andWhere(
		   		$qb->expr()->andX(
		   				$qb->expr()->eq('c.trajet.villeDepart', ':villeDepart'),
		   				$qb->expr()->eq('c.trajet.villeArrivee', ':villeArrivee')
		   		)
		   )
		   ->groupBy('date')
		   ->orderBy('date', 'DESC')
		;
	
		$qb->setParameter('dateMin', $dateTimesInterval[0]);
		$qb->setParameter('dateMax', $dateTimesInterval[1]);
		$qb->setParameter('villeDepart', $trajet->getVilleDepart());
		$qb->setParameter('villeArrivee', $trajet->getVilleArrivee());
	
		return $qb->getQuery()->getResult();
	}
	
	/**
	 * Find carpoolings beginning after the specified datetime
	 * @param unknown $trajet
	 * @param unknown $$dateTimesInterval
	 * @param unknown $page
	 */
	public function findByRouteAndDatetimesInterval($trajet, $dateTimesInterval, $page)
	{
		$qb = $this->createQueryBuilder('c');
		$qb->leftJoin('c.offreEmise', 'o');
		$qb->where(
				$qb->expr()->between('c.dateDepart', ':dateMin', ':dateMax')
		)
		->andWhere(
				$qb->expr()->andX(
						$qb->expr()->eq('c.trajet.villeDepart', ':villeDepart'),
						$qb->expr()->eq('c.trajet.villeArrivee', ':villeArrivee')
				)
		)
		->andWhere(
				$qb->expr()->orX(
						$qb->expr()->isNull('c.offreEmise'),
						$qb->expr()->lt('o.dateValidite', ':currentDateTime')
				)
		);
	
		$qb->orderBy('c.dateDepart', 'ASC');
		$qb->setParameter(ConstParamAttributs::PARAM_CURRENT_DATE_TIME, new \DateTime());
		$qb->setParameter('dateMin', $dateTimesInterval[0]);
		$qb->setParameter('dateMax', $dateTimesInterval[1]);
		$qb->setParameter('villeDepart', $trajet->getVilleDepart());
		$qb->setParameter('villeArrivee', $trajet->getVilleArrivee());
	
		return $this->buildPaginator($qb, $page, ConstParamAttributs::ATTR_NB_ELMT_BY_PAGE);
	}
	
}
